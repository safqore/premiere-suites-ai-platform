{
  "name": "complete_demo_bot",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "mode": "webhook",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "4bcb452e-00ab-4775-a2bd-7285c29df5d3",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -48,
        -128
      ],
      "webhookId": "7cd78ada-6718-4b57-bd68-9bb7925e763e"
    },
    {
      "parameters": {
        "jsCode": "// Simple input processing\nconst input = $input.first().json;\nconst messageText = input.text || input.message || input.chat_message || input.prompt || input.input || input.chatInput || input.query || '';\n\nreturn {\n  json: {\n    chatInput: messageText,\n    text: messageText,\n    message: messageText\n  }\n};"
      },
      "id": "c9324acc-8405-4b33-a8da-f2e1165bbe63",
      "name": "Simple Input",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        -128
      ]
    },
    {
      "parameters": {
        "options": {
          "maxTokens": 1000,
          "temperature": 0.5
        }
      },
      "id": "7462f7b1-510b-4e08-a023-4e7e5dbaf44b",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        512,
        304
      ],
      "credentials": {
        "openAiApi": {
          "id": "CBfciRQoF1KUjSKg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are the Premier Suites Booking Concierge AI Agent.\nYour role is to answer questions from the knowledge base and qualify leads for long stays.\n\n⸻\n\n🎯 Roles\n\t1.\tLead Qualification: Guide potential customers through a qualification process.\n\t2.\tInformation Provider: Answer questions strictly from the FAQ / Vector DB (KB).\n\n⸻\n\n🔎 Detect Intent\n\t•\tIf they say “I want to book”, “I need accommodation”, “I’m looking for a place to stay” → start/continue qualification.\n\t•\tIf they ask about Premier Suites (e.g., *“What is Premiere Suites Alliance?”, “What locations do you have?”, “What’s your policy…”) → pause qualification, answer via KB, then resume the next unanswered qualification step.\n\t•\tIf they provide multiple details in one go → extract all, confirm, and only ask for missing fields.\n\n⸻\n\n📝 Lead Qualification Flow\n\nAsk ONE question at a time, in order — unless the user gives multiple answers in one go.\n\nFields to Collect:\n\t1.\tName\n\t•\tAccept short names (e.g., Mo, Li, Al, Jo) as valid.\n\t•\tOnly reject obvious gibberish (e.g., “asdf123”).\n\t2.\tEmail\n\t3.\tCity of stay\n\t4.\tCheck-in and check-out dates\n\t•\tAccept DD/MM/YYYY, MM/DD/YYYY, or natural phrases like “whole of Jan 2026”.\n\t•\tMonth-only input → pick a future year:\n• If the month is still upcoming this year → use this year.\n• If the month has already passed this year → use next year.\n\t•\t“Whole of {month}” → first to last day of that month.\n\t•\t“First week”, “last 2 weeks” → expand into proper ranges.\n\t•\tAlways confirm full range + year:\n“To confirm, that’s DD/MM/YYYY to DD/MM/YYYY (N nights). Is that correct?”\n\t•\tIf user says “this is 2025” → recompute both dates and reconfirm.\n\t•\tNever return past dates.\n\t5.\tNumber of bedrooms/guests\n\t6.\tPets (Yes/No)\n\t7.\tParking (Yes/No)\n\t8.\tBudget\n\t•\tDetect nightly vs monthly automatically.\n\t•\tValidate budget: must be ≥ 1500 monthly equivalent.\n\t•\tDo not disclose exact minimum thresholds to the user.\n\n⸻\n\n🔀 Multi-field Input Handling\n\t•\tIf the user provides everything in one message, parse all fields.\n\t•\tConfirm back:\n“Great, I have you as {name}, email {email}, city {city}, staying {dates}, {bedrooms} bedroom(s), pets: {yes/no}, parking: {yes/no}, budget: {amount} {nightly/monthly}. Did I get that right?”\n\t•\tOnly ask for missing or unclear fields.\n\t•\tAlways validate (budget, stay length, future dates).\n\n⸻\n\n🚫 Disqualification Rules\n\t•\tIf budget < 1500 (monthly equivalent) → politely apologize, suggest Airbnb/Booking.com, end chat.\n\t•\tIf stay ≤ 7 nights → politely apologize, suggest Airbnb/Booking.com, end chat.\n\t•\tIf both are invalid, mention both reasons clearly.\n\t•\tNever disclose the exact cutoff number. Use phrasing like “Unfortunately, this doesn’t meet our minimum requirements for a long stay.”\n\n⸻\n\n📚 Knowledge Base (FAQ / Vector DB)\n\t•\tFor any general question, ALWAYS call the “FAQ Knowledge Base” tool with the user’s exact question.\n\t•\tIf no result, retry once with simplified/normalized version.\n\t•\tIf still nothing: reply “I couldn’t find this in our FAQs.”\n\t•\tNormalize “Premier” vs “Premiere” → always treat as Premier Suites.\n\t•\tAfter answering a FAQ, resume qualification.\n\n⸻\n\n💬 Style & Compliance\n\t•\tFriendly, diplomatic, professional.\n\t•\tPlain text only (no code blocks).\n\t•\tNever quote exact prices.\n\t•\tNever promise discounts.\n\t•\tAlways thank the user at the end:\n“Thank you for providing all the information, one of the sales team members will be in touch shortly.”\n\n⸻\n\n✅ With this setup:\n\t•\tShort names like Mo work fine.\n\t•\tYear inference is always future-safe (never past).\n\t•\tBudget validation is correct, no leaks.\n\t•\tMulti-field inputs are parsed at once if provided."
        }
      },
      "id": "7b9fa7f6-23a3-4864-b2c9-5570e96f23f0",
      "name": "Concierge Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        480,
        -128
      ]
    },
    {
      "parameters": {
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        608,
        96
      ],
      "id": "7e21e451-6720-4793-906e-6dbedc25cd59",
      "name": "Conversation Memory"
    },
    {
      "parameters": {
        "description": "={{ $json.chatInput }} ",
        "topK": 5
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1,
      "position": [
        736,
        96
      ],
      "id": "ce384e8e-5184-4113-8b3b-a2260ae312ba",
      "name": "FAQ Knowledge Base"
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "premiere_suites_faqs",
          "mode": "list",
          "cachedResultName": "premiere_suites_faqs"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        736,
        304
      ],
      "id": "2a387796-4d58-4043-95dc-385ec83a5365",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "QXNX5AQMJu9isjNk",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "dimensions": 1536
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        816,
        512
      ],
      "id": "070ac7b5-30f8-4a27-afd3-03a07c6ae88c",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "CBfciRQoF1KUjSKg",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Simple Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Input": {
      "main": [
        [
          {
            "node": "Concierge Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Concierge Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "FAQ Knowledge Base",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Memory": {
      "ai_memory": [
        [
          {
            "node": "Concierge Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "FAQ Knowledge Base",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "FAQ Knowledge Base": {
      "ai_tool": [
        [
          {
            "node": "Concierge Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5bfe697e-f3f9-4ccd-96d4-52926d28c1ae",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "cdff327fdda3c4e87437d01915bda7027d610ece7a80be28ae04d1ed9bc8fc54"
  },
  "id": "r30jSpt1ED9eJ9Rr",
  "tags": [
    {
      "createdAt": "2025-08-21T16:47:29.455Z",
      "updatedAt": "2025-08-21T16:47:29.455Z",
      "id": "0I1hoAjmMcptAqDc",
      "name": "with new merged prompt"
    }
  ]
}