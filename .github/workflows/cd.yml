name: Deploy N8N (Render) and Frontend (Vercel)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: cd-n8n-frontend-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Print environment
        run: |
          echo "✅ GitHub Actions is working."
          echo "Repo: $GITHUB_REPOSITORY"
          echo "Commit: $GITHUB_SHA"

  preflight:
    runs-on: ubuntu-latest
    needs: sanity
    steps:
      - name: Validate required secrets
        run: |
          missing=0
          for var in RENDER_API_KEY RENDER_N8N_SERVICE_ID VERCEL_TOKEN VERCEL_PROJECT_NAME; do
            if [ -z "${!var}" ]; then
              echo "❌ Missing secret: $var"
              missing=1
            else
              echo "✅ $var present"
            fi
          done
          if [ "$missing" -eq 1 ]; then
            echo "One or more required secrets are missing. Configure them in the repository settings."
            exit 1
          fi
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_N8N_SERVICE_ID: ${{ secrets.RENDER_N8N_SERVICE_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_PROJECT_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: preflight
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Deploy demo frontend to Vercel
        run: |
          # Install Vercel CLI, deploy from the demo folder and remove any ephemeral .vercel link created by the CLI.
          # Use the provided project name so we don't rely on a committed .vercel folder.
          npm install -g vercel@latest
          # Deploy non-interactively to the named project. --yes replaces deprecated --confirm.
          vercel --token "$VERCEL_TOKEN" --prod --yes --name "$VERCEL_PROJECT_NAME"
          # The CLI may create a local .vercel link during the run; remove it so the repo never relies on it.
          rm -rf .vercel || true
        working-directory: src/demo
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_PROJECT_NAME }}

      - name: Deploy N8N to Render (placeholder)
        run: |
          echo "Next step: Implement Render deploy via API (curl) for N8N & frontend."
          echo "Will use RENDER_API_KEY + service IDs."