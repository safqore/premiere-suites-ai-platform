name: Deploy N8N Backend via Render CLI

on:
  workflow_dispatch:
    inputs:
      workflow_n8n_path:
        description: 'N8N workflow to deploy'
        required: false
        default: 'docs/workflows/premiere-suites-demo-workflow.json'

concurrency:
  group: render-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ vars.RENDER_SERVICE_ID }}
      RENDER_CLI_VERSION: 2.1.5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Preflight (secrets, path)
        id: preflight
        shell: bash
        run: |
          set -euo pipefail
          : "${RENDER_API_KEY:?Missing RENDER_API_KEY secret}"
          : "${RENDER_SERVICE_ID:?Missing RENDER_SERVICE_ID variable}"

          WORKFLOW_PATH="${{ github.event.inputs.workflow_n8n_path || 'docs/workflows/premiere-suites-demo-workflow.json' }}"
          WORKFLOW_PATH="${WORKFLOW_PATH%/}"

          if [[ ! -f "$WORKFLOW_PATH" ]]; then
            echo "❌ Workflow file does not exist: $WORKFLOW_PATH" >&2
            exit 1
          fi

          echo "WORKFLOW_PATH=$WORKFLOW_PATH" >> "$GITHUB_ENV"
          echo "workflow_path=$WORKFLOW_PATH" >> "$GITHUB_OUTPUT"
          echo "✅ Preflight complete: workflow_path=$WORKFLOW_PATH"

      - name: Install Render CLI (pinned)
        run: |
          set -euo pipefail
          echo "Downloading Render CLI v${RENDER_CLI_VERSION}"
          curl -L "https://github.com/render-oss/cli/releases/download/v${RENDER_CLI_VERSION}/cli_${RENDER_CLI_VERSION}_linux_amd64.zip" -o render.zip
          unzip -o -q render.zip
          chmod +x "cli_v${RENDER_CLI_VERSION}"
          sudo mv "cli_v${RENDER_CLI_VERSION}" /usr/local/bin/render
          render --version

      - name: Render login (non-interactive)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          CI: 'true'
        run: render login --confirm -o json

      - name: List Render services
        run: render services --output json --confirm

      - name: Trigger redeploy
        run: |
          echo "Deploying service $RENDER_SERVICE_ID ..."
